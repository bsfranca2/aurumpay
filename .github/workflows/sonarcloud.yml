name: SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonar-backend:
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.202'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"bsfranca2_aurumpay_backend" /o:"bsfranca2" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  # sonar-checkoutapp:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: src/CheckoutApp
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Install pnpm
  #       uses: pnpm/action-setup@v4
  #       with:
  #         version: 10

  #     - name: Use Node.js 22
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 22
  #         cache: 'pnpm'

  #     - name: Install deps
  #       run: npm ci

  #     - name: Run tests and coverage
  #       run: npm run test:unit -- --coverage

  #     - name: SonarCloud Scan
  #       uses: SonarSource/sonarcloud-github-action@v2
  #       with:
  #         projectBaseDir: .
  #         args: >
  #           -Dsonar.login=${{ secrets.SONAR_TOKEN }}
  #           -Dproject.settings=../../.sonarcloud/checkoutapp-sonar-project.properties
